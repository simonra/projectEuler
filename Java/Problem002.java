package projectEuler;

/*
http://projecteuler.net/problem=2

Problem:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


// Solved
public class Problem002 {

	
//	fordi odde + odde = like, må man finne summen av hvert 3. term, når man begynner på term 2.
	
	int findSumOfEvenFibonacciNumbersLessThanN(int n){
		int sum = 0;
		int fibN = 1;
		int fibNMinus1 = 0;
		int fibNPluss1 = 0;
		int i = 1;
		
		while (fibN < n) {
//			sum += fibN;
			fibNPluss1 = fibN + fibNMinus1;
			fibNMinus1 = fibN;
			fibN = fibNPluss1;
			
			if(i == 2){
				sum += fibN;
				i -= 2;
			}else{
				i++;
			}
		}
		
		
		return sum;
	}
	
	public static void main(String[] args) {
		Problem002 p2 = new Problem002();
		System.out.println(p2.findSumOfEvenFibonacciNumbersLessThanN(4000000));
		
//		Svaret når n = 4'000'000 er 4613732
	}
		
}
